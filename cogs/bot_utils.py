import disnake
from disnake.ext import commands
from gtts import gTTS
from db import SQLITE

db = SQLITE("database.db")


class CogUtils(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.persistent_views_added = False

    @commands.Cog.listener()
    async def on_ready(self):
        print(f"utils.py is ready")


    @commands.slash_command(description="üîß –£—Ç–∏–ª–∏—Ç—ã | –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–Ω–Ω–µ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    async def banner(self, inter, member: disnake.Member = commands.Param(None, name="—É—á–∞—Å—Ç–Ω–∏–∫", description="–£–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞")):
        lang_server = db.get(f"lang_{inter.guild.id}") or "ru"
        if member is None:
            member = await self.bot.fetch_user(inter.author.id)
        else:
            member = await self.bot.fetch_user(member.id)

        if member.banner is None:
            if lang_server == 'ru':
                await inter.send("–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –±–∞–Ω–Ω–µ—Ä", ephemeral=True)
            if lang_server == 'en':
                await inter.send("The user does not have a banner", ephemeral=True)
            if lang_server == 'uk':
                await inter.send("–£ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –±–∞–Ω–µ—Ä", ephemeral=True)
        else:
            if lang_server == 'ru':
                embed = disnake.Embed(title=f"–ë–∞–Ω–Ω–µ—Ä ‚Äî {member}", description=f"[–°–∫–∞—á–∞—Ç—å]({member.banner})", color=0x2b2d31)
            if lang_server == 'en':
                embed = disnake.Embed(title=f"Banner ‚Äî {member}", description=f"[Download]({member.banner})", color=0x2b2d31)
            if lang_server == 'uk':
                embed = disnake.Embed(title=f"–ë–∞–Ω–µ—Ä ‚Äî {member}", description=f"[–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏]({member.banner})", color=0x2b2d31)
            embed.set_image(url=member.banner)
            await inter.send(embed=embed)

    langs = ['–ê–Ω–≥–ª–∏–π—Å–∫–∏–π', '–ê—Ä–∞–±—Å–∫–∏–π', '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π', '–†—É—Å—Å–∫–∏–π', '–£–∫—Ä–∞–∏–Ω—Å–∫–∏–π']

    @commands.slash_command(description="üîß –£—Ç–∏–ª–∏—Ç—ã | –°–æ–∑–¥–∞—Ç—å –æ–∑–≤—É—á–∫—É")
    async def gtts(self, inter, lang: str = commands.Param(name="—è–∑—ã–∫", description="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è", choices=langs), text: str = commands.Param(name="—Ç–µ–∫—Å—Ç", description="–ö–∞–∫–æ–π —Ç–µ–∫—Å—Ç –æ–∑–≤—É—á–∏—Ç—å?")):
        lang_server = db.get(f"lang_{inter.guild.id}") or "ru"
        lang_map = {
            '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π': 'en',
            '–ê—Ä–∞–±—Å–∫–∏–π': 'ar',
            '–†—É—Å—Å–∫–∏–π': 'ru',
            '–£–∫—Ä–∞–∏–Ω—Å–∫–∏–π': 'uk'
        }

        if lang in lang_map:
            tts = gTTS(text=text, lang=lang_map[lang])
            tts.save(f"./cores/gtts/{lang_map[lang]}-voice.mp3")
        if lang_server == 'ru':
            await inter.send("–†–µ–∑—É–ª—å—Ç–∞—Ç:", file=disnake.File(f"./cores/gtts/{lang_map[lang]}-voice.mp3"))
        if lang_server == 'en':
            await inter.send("Result:", file=disnake.File(f"./cores/gtts/{lang_map[lang]}-voice.mp3"))
        if lang_server == 'uk':
            await inter.send("–†–µ–∑—É–ª—å—Ç–∞—Ç:", file=disnake.File(f"./cores/gtts/{lang_map[lang]}-voice.mp3"))

    @gtts.error
    async def gtts_error(self, inter):
        lang_server = db.get(f"lang_{inter.guild.id}") or "ru"
        if lang_server == 'ru':
            embed = disnake.Embed(description=f"–ü—Ä–æ—Å—Ç–∏—Ç–µ, –¥–∞–Ω–Ω—ã–π —è–∑—ã–∫ —Å–µ–π—á–∞—Å –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω!", color=0x2b2d31)
        if lang_server == 'en':
            embed = disnake.Embed(description=f"Sorry, this language is currently not available!", color=0x2b2d31)
        if lang_server == 'uk':
            embed = disnake.Embed(description=f"–í–∏–±–∞—á—Ç–µ, —Ü—è –º–æ–≤–∞ –∑–∞—Ä–∞–∑ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞!", color=0x2b2d31)
        embed.set_author(name=f"{inter.author.name}", icon_url=f"{inter.author.avatar.url}")
        await inter.send(embed=embed)


    @commands.slash_command(description=f"üîß –£—Ç–∏–ª–∏—Ç—ã | –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def avatar(self, inter, user: disnake.Member = commands.Param(name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", description="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")):
        lang_server = db.get(f"lang_{inter.guild.id}") or "ru"
        member = user or inter.user
        if user is None:
            formats = [
                f"PNG({user.display_avatar.replace(format='png', size=1024).url}) | ",
                f"JPG({user.display_avatar.replace(format='jpg', size=1024).url})",
                f" | WebP({user.display_avatar.replace(format='WebP', size=1024).url})",
                f" | GIF({user.display_avatar.replace(format='gif', size=1024).url})" if user.display_avatar.is_animated() else ""
            ]
            if lang_server == 'ru':
                embed = disnake.Embed(title="–¢–≤–æ—è –∞–≤–∞—Ç–∞—Ä–∫–∞", description=' '.join(formats), color=0x2b2d31)
            if lang_server == 'en':
                embed = disnake.Embed(title="You avatar", description=' '.join(formats), color=0x2b2d31)
            if lang_server == 'uk':
                embed = disnake.Embed(title="–¢–≤–æ—è –∞–≤–∞—Ç–∞—Ä–∫–∞", description=' '.join(formats), color=0x2b2d31)
            embed.set_image(url=inter.author_avatar.url)
            await inter.send(embed=embed)
        else:
            formats = [
                f"[PNG]({user.display_avatar.replace(format='png', size=1024).url}) | ",
                f"[JPG]({user.display_avatar.replace(format='jpg', size=1024).url})",
                f" | [WebP]({user.display_avatar.replace(format='webp', size=1024).url})",
                f" | [GIF]({user.display_avatar.replace(format='gif', size=1024).url})" if user.display_avatar.is_animated() else ""
            ]
            if lang_server == 'ru':
                embed = disnake.Embed(title=f"–ê–≤–∞—Ç–∞—Ä–∫–∞ {'–±–æ—Ç–∞' if user.bot else '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'} {member.name}", description=' '.join(formats), color=0x2b2d31)
            if lang_server == 'en':
                embed = disnake.Embed(title=f"{'Bot' if user.bot else 'User'} avatar {member.name}", description=' '.join(formats), color=0x2b2d31)
            if lang_server == 'uk':
                embed = disnake.Embed(title=f"–ê–≤–∞—Ç–∞—Ä–∫–∞ {'–±–æ—Ç–∞' if user.bot else '–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'} {member.name}", description=' '.join(formats), color=0x2b2d31)
            embed.set_image(url=member.display_avatar.url)
            await inter.send(embed=embed)

    @commands.slash_command(description="üîß –£—Ç–∏–ª–∏—Ç—ã | –ê–≤—Ç–æ—Ä–æ–ª–∏")
    @commands.has_permissions(administrator=True)
    async def autorole(self, inter, role: disnake.Role):
        lang_server = db.get(f"lang_{inter.guild.id}") or "ru"
        if role.name == "@everyone":
            db.delete(f"autorole_{inter.guild.id}")
            if lang_server == 'ru':
                embed = disnake.Embed(description="**–ê–≤—Ç–æ—Ä–æ–ª—å –±—ã–ª–∞ —É–±—Ä–∞–Ω–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞**", color=0x2b2d31)
            elif lang_server == 'en':
                embed = disnake.Embed(description="**Author role has been removed for the server**", color=0x2b2d31)
            elif lang_server == 'uk':
                embed = disnake.Embed(description="**–ê–≤—Ç–æ—Ä–æ–ª—å –±—É–ª–∞ –ø—Ä–∏–±—Ä–∞–Ω–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞**", color=0x2b2d31)
        else:
            db.set(f"autorole_{inter.guild.id}", str(role.id))
            if lang_server == 'ru':
                embed = disnake.Embed(description=f"**–ö–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É, —Ä–æ–ª—å <@&{role.id}> –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é**", color=0x2b2d31)
            elif lang_server == 'en':
                embed = disnake.Embed(description=f"**When someone joins the server, the <@&{role.id}> role will automatically be assigned to the user**", color=0x2b2d31)
            elif lang_server == 'uk':
                embed = disnake.Embed(description=f"**–ö–æ–ª–∏ —Ö—Ç–æ—Å—å –ø—Ä–∏—î–¥–Ω—É—î—Ç—å—Å—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞, —Ä–æ–ª—å <@&{role.id}> –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–¥–∞–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É**", color=0x2b2d31)
        await inter.send(embed=embed)

    @autorole.error
    async def autorole_error(self, inter, error):
        lang_server = db.get(f"lang_{inter.guild.id}") or "ru"
        if isinstance(error, commands.MissingPermissions):
            if lang_server == 'ru':
                await inter.send("–£ –≤–∞—Å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–∞–≤–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á—Ç–æ –±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –≤—ã–¥–∞—á—É —Ä–æ–ª–µ–π", ephemeral=True)
            if lang_server == 'en':
                await inter.send("You must have administrator rights to set the automatic distribution of roles", ephemeral=True)
            if lang_server == 'uk':
                await inter.send("–£ –≤–∞—Å –º–∞—î –±—É—Ç–∏ –ø—Ä–∞–≤–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —â–æ–± –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—É –≤–∏–¥–∞—á—É —Ä–æ–ª–µ–π", ephemeral=True)

def setup(bot):
    bot.add_cog(CogUtils(bot))
