"""
MIT License

Copyright (c) 2022 - 2024 Tasfers

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
"""

import disnake

from disnake.ext import commands
from gtts import gTTS
from db import SQLITE

db = SQLITE("database.db")


class CogUtils(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.persistent_views_added = False

    @commands.Cog.listener()
    async def on_ready(self):
        print("utils.py is ready")
        await db.initialize()

    @commands.Cog.listener()
    async def on_member_join(self, member):
        autorole = db.get(f"autorole_{member.guild.id}")
        if autorole is None:
            return
        role = disnake.utils.get(member.guild.roles, id=int(autorole))
        await member.add_roles(role)

    @commands.slash_command(description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–æ–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä!")
    @commands.has_permissions(administrator=True)
    async def autorole(self, inter, role: disnake.Role):
        if role.position == 0:
            return await inter.send('–î–∞–≤–∞–π—Ç–µ –æ—Å—Ç–∞–≤–∏–º `@everyone` –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏ –æ–±—â–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –∞ –∞–≤—Ç–æ—Ä–æ–ª–∏ —Å–¥–µ–ª–∞–µ–º –±–æ–ª–µ–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏, –æ–∫?', ephemeral=True)
            
        if role.is_premium_subscriber():
            return await inter.send('–≠—Ö, —Ä–æ–ª—å –±—É—Å—Ç–µ—Ä–∞ —Å–ª–∏—à–∫–æ–º "–≤–∑—Ä—ã–≤–Ω–∞—è" –¥–ª—è –∞–≤—Ç–æ—Ä–æ–ª–µ–π, –æ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–ª—å–∫–æ –∫—Ä—É—Ç–∞—è, —á—Ç–æ —è –Ω–µ –º–æ–≥—É –µ—ë –≤—ã–¥–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!', ephemeral=True)

        if role.is_integration():
            return await inter.send('–û–≥–æ, —Ä–æ–ª—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ –∞–≤—Ç–æ—Ä–æ–ª–∏? –ù—É-–Ω—É, —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Ç–æ—Å—Ç–µ—Ä–∞! –õ—É—á—à–µ –æ—Å—Ç–∞–≤–∏–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–∞ –∏—Ö –º–µ—Å—Ç–µ –∏ –Ω–µ –ø—É—Ç–∞–µ–º —Ä–æ–ª–∏ —Å –ø–∏—Ä–æ–∂–∫–∞–º–∏!', ephemeral=True)

        if role.is_bot_managed():
            return await inter.send('–†–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è? –ù—É, –æ–Ω–∞ —Ç–∞–∫–∞—è –æ—Å–æ–±–µ–Ω–Ω–∞—è, —á—Ç–æ –¥–∞–∂–µ –∞–≤—Ç–æ—Ä–æ–ª–∏ –Ω–µ –º–æ–≥—É—Ç –µ–µ –ø–æ–Ω—è—Ç—å! –õ–æ–≤–∏—Ç–µ –æ—à–∏–±–∫—É 404: –†–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–æ–ª–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–æ–ª–µ–π', ephemeral=True)

        await db.set(f"autorole_{inter.guild.id}", str(role.id))
        embed = disnake.Embed(description=f"**–ö–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É, —Ä–æ–ª—å <@&{role.id}> –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é**", color=0x2b2d31)
        await inter.send(embed=embed)

    @autorole.error
    async def autorole_error(self, inter, error):
        await db.get(f"lang_{inter.guild.id}") or "ru"
        if isinstance(error, commands.MissingPermissions):
                await inter.send("–£ –≤–∞—Å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–∞–≤–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á—Ç–æ –±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –≤—ã–¥–∞—á—É —Ä–æ–ª–µ–π", ephemeral=True)


    @commands.slash_command(description="üîß –£—Ç–∏–ª–∏—Ç—ã | –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–Ω–Ω–µ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    async def banner(self, inter, member: disnake.Member = commands.Param(None, name="—É—á–∞—Å—Ç–Ω–∏–∫", description="–£–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞")):
        lang_server = db.get(f"lang_{inter.guild.id}") or "ru"
        if member is None:
            member = await self.bot.fetch_user(inter.author.id)
        else:
            member = await self.bot.fetch_user(member.id)

        if member.banner is None:
            if lang_server == 'ru':
                await inter.send("–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –±–∞–Ω–Ω–µ—Ä", ephemeral=True)
            if lang_server == 'en':
                await inter.send("The user does not have a banner", ephemeral=True)
            if lang_server == 'uk':
                await inter.send("–£ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –±–∞–Ω–µ—Ä", ephemeral=True)
        else:
            if lang_server == 'ru':
                embed = disnake.Embed(title=f"–ë–∞–Ω–Ω–µ—Ä ‚Äî {member}", description=f"[–°–∫–∞—á–∞—Ç—å]({member.banner})", color=0x2b2d31)
            if lang_server == 'en':
                embed = disnake.Embed(title=f"Banner ‚Äî {member}", description=f"[Download]({member.banner})", color=0x2b2d31)
            if lang_server == 'uk':
                embed = disnake.Embed(title=f"–ë–∞–Ω–µ—Ä ‚Äî {member}", description=f"[–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏]({member.banner})", color=0x2b2d31)
            embed.set_image(url=member.banner)
            await inter.send(embed=embed)

    langs = ['–ê–Ω–≥–ª–∏–π—Å–∫–∏–π', '–ê—Ä–∞–±—Å–∫–∏–π', '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π', '–†—É—Å—Å–∫–∏–π', '–£–∫—Ä–∞–∏–Ω—Å–∫–∏–π']

    @commands.slash_command(description="üîß –£—Ç–∏–ª–∏—Ç—ã | –°–æ–∑–¥–∞—Ç—å –æ–∑–≤—É—á–∫—É")
    async def gtts(self, inter, lang: str = commands.Param(name="—è–∑—ã–∫", description="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è", choices=langs), text: str = commands.Param(name="—Ç–µ–∫—Å—Ç", description="–ö–∞–∫–æ–π —Ç–µ–∫—Å—Ç –æ–∑–≤—É—á–∏—Ç—å?")):
        lang_server = db.get(f"lang_{inter.guild.id}") or "ru"
        lang_map = {
            '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π': 'en',
            '–ê—Ä–∞–±—Å–∫–∏–π': 'ar',
            '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π': 'be',
            '–†—É—Å—Å–∫–∏–π': 'ru',
            '–£–∫—Ä–∞–∏–Ω—Å–∫–∏–π': 'uk'
        }

        tts = gTTS(text=text, lang=lang_map[lang])
        tts.save(f"./src/audio/gtts/{lang_map[lang]}-voice.mp3")
        file = disnake.File(f"./src/audio/gtts/{lang_map[lang]}-voice.mp3")
        message = {
            'ru': '–†–µ–∑—É–ª—å—Ç–∞—Ç:',
            'en': 'Result:',
            'uk': '–†–µ–∑—É–ª—å—Ç–∞—Ç:'    
        }[lang_server]
        await inter.send(message, file=file)

    @gtts.error
    async def gtts_error(self, inter):
        lang = db.get(f"lang_{inter.guild.id}") or "ru"
        message = {
            'ru': '–ü—Ä–æ—Å—Ç–∏—Ç–µ, –¥–∞–Ω–Ω—ã–π —è–∑—ã–∫ —Å–µ–π—á–∞—Å –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω!',
            'en': 'Sorry, this language is currently not available!',
            'uk': '–í–∏–±–∞—á—Ç–µ, —Ü—è –º–æ–≤–∞ –∑–∞—Ä–∞–∑ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞!'    
        }[lang]
        embed = disnake.Embed(description=message, color=0x2b2d31)
        embed.set_author(name=inter.author.name, icon_url=inter.user.display_avatar.url)
        await inter.send(embed=embed)


    @commands.slash_command(description="üîß –£—Ç–∏–ª–∏—Ç—ã | –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def avatar(self, inter, user: disnake.Member = commands.Param(None, name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", description="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")):
        lang = db.get(f"lang_{inter.guild.id}") or "ru"
        if user is None:
            user = inter.user
            formats = [
                f"PNG({user.display_avatar.replace(format='png', size=1024).url}) | ",
                f"JPG({user.display_avatar.replace(format='jpg', size=1024).url})",
                f" | WebP({user.display_avatar.replace(format='WebP', size=1024).url})",
                f" | GIF({user.display_avatar.replace(format='gif', size=1024).url})" if user.display_avatar.is_animated() else ""
            ]
            message = {
                'ru': '–¢–≤–æ—è –∞–≤–∞—Ç–∞—Ä–∫–∞',
                'en': 'You avatar',
                'uk': '–¢–≤–æ—è –∞–≤–∞—Ç–∞—Ä–∫–∞'    
            }[lang]
            embed = disnake.Embed(title=message, description=' '.join(formats), color=0x2b2d31)
            embed.set_image(url=inter.user.display_avatar.url)
            await inter.send(embed=embed)
        else:
            formats = [
                f"[PNG]({user.display_avatar.replace(format='png', size=1024).url}) | ",
                f"[JPG]({user.display_avatar.replace(format='jpg', size=1024).url})",
                f" | [WebP]({user.display_avatar.replace(format='webp', size=1024).url})",
                f" | [GIF]({user.display_avatar.replace(format='gif', size=1024).url})" if user.display_avatar.is_animated() else ""
            ]
            if lang == 'ru':
                embed = disnake.Embed(title=f"–ê–≤–∞—Ç–∞—Ä–∫–∞ {'–±–æ—Ç–∞' if user.bot else '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'} {user.name}", description=' '.join(formats), color=0x2b2d31)
            if lang == 'en':
                embed = disnake.Embed(title=f"{'Bot' if user.bot else 'User'} avatar {user.name}", description=' '.join(formats), color=0x2b2d31)
            if lang == 'uk':
                embed = disnake.Embed(title=f"–ê–≤–∞—Ç–∞—Ä–∫–∞ {'–±–æ—Ç–∞' if user.bot else '–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'} {user.name}", description=' '.join(formats), color=0x2b2d31)
            embed.set_image(url=user.display_avatar.url)
            await inter.send(embed=embed)


def setup(bot):
    bot.add_cog(CogUtils(bot))
