import disnake
from disnake.ext import commands
from config import settings
import time
import psutil
from platform import python_version
from humanize import naturalsize
from datetime import datetime
from os import getpid
from db import SQLITE

db = SQLITE("database.db")

class Information(commands.Cog):

    def __init__(self, bot):
        self.bot = bot
       
    time = time.time()

    @commands.Cog.listener()
    async def on_ready(self):
        print("bot.py is ready")

    @commands.slash_command(description="üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è | –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞")
    async def bot(self, inter):
        await inter.response.defer()
        servers = len(self.bot.guilds)
        users = len(self.bot.users)
        channels = sum([len(guild.channels) for guild in self.bot.guilds])
        cpu = psutil.cpu_percent()
        ram = naturalsize(psutil.Process(getpid()).memory_info().rss)
        total_ram = naturalsize(psutil.virtual_memory().total)
        pyver = python_version()
        buttons = disnake.ui.View()
        lang_server = db.get(f"lang_{inter.guild.id}") or "ru"
        if lang_server == 'ru':
            website = "–°–∞–π—Ç"
            support = "–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏"
            embed = disnake.Embed(
                title=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞",
                description=f"**–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏:** `malix.dev`, `deathofalori`, `towux`\n"
                        "\n**–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**\n"
                        f" `üí¨` –°–µ—Ä–≤–µ—Ä–æ–≤: **{servers}**\n"
                        f"`üë•` –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: **{users}**\n"
                        f"`üßæ` –ö–∞–Ω–∞–ª—ã: **{channels}**\n\n"
                        "**–•–æ—Å—Ç–∏–Ω–≥:**\n"
                        f"`üî•` –ù–∞–≥—Ä—É–∑–∫–∞: **{cpu}%**\n"
                        f"`üìã` –û–ó–£: **{ram} / {total_ram}**\n"
                        f"`üì∂` –ó–∞–¥–µ—Ä–∂–∫–∞: **{round(self.bot.latency * 1000)}ms**\n\n"
                        "**–û –±–æ—Ç–µ:** \n"
                        f"`üíø` –í–µ—Ä—Å–∏—è –±–æ—Ç–∞: **{settings['botVersion']}**\n"
                        f"`üíø` –í–µ—Ä—Å–∏—è python: `{pyver}`\n"
                        f"`üìö` –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞: **Disnake {disnake.__version__}**\n\n"
                        "**–î—Ä—É–≥–æ–µ:** \n"
                        "`üîå` –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: **linux**\n"
                        f"`‚ö°` –ó–∞–ø—É—â–µ–Ω–æ <t:{settings['uptime']}:R>", 
                color=0x2b2d31)
            embed.set_footer(text=f"Tasfers ¬© Copyright 2022  -  {datetime.today().year}  |  –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã")
        if lang_server == 'en':
            website = "Website"
            support = "Support server"
            embed = disnake.Embed(
                title=f"Bot statistics",
                description=f"**Developers:** `malix.dev`, `deathofalori`, `towux`\n"
                        "\n**Basic information:**\n"
                        f" `üí¨` Servers: **{servers}**\n"
                        f"`üë•` Users: **{users}**\n"
                        f"`üßæ` Channels: **{channels}**\n\n"
                        "**Hosting:**\n"
                        f"`üî•` Load CPU: **{cpu}%**\n"
                        f"`üìã` RAM: **{ram} / {total_ram}**\n"
                        f"`üì∂` Ping: **{round(self.bot.latency * 1000)}ms**\n\n"
                        "**About the bot:** \n"
                        f"`üíø` Bot version: **{settings['botVersion']}**\n"
                        f"`üíø` python version: `{pyver}`\n"
                        f"`üìö` Library: **Disnake {disnake.__version__}**\n\n"
                        "**Other:** \n"
                        "`üîå` Platform: **linux**\n"
                        f"`‚ö°` Launched <t:{settings['uptime']}:R>", color=0x2b2d31)
            embed.set_footer(text=f"Tasfers ¬© Copyright 2022  -  {datetime.today().year}  |  All rights reserved")
        if lang_server == 'uk':
            website = "–°–∞–π—Ç"
            support = "–°–µ—Ä–≤–µ—Ä –ø—ñ–¥—Ç—Ä–∏–º–∫–∏"
            embed = disnake.Embed(
                title=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                description=f"**–†–æ–∑—Ä–æ–±–Ω–∏–∫–∏:** `malix.dev`, `deathofalori`, `towux`\n"
                        "\n**–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:**\n"
                        f" `üí¨` –°–µ—Ä–≤–µ—Ä—ñ–≤: **{servers}**\n"
                        f"`üë•` –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ: **{users}**\n"
                        f"`üßæ` –ö–∞–Ω–∞–ª–∏: **{channels}**\n\n"
                        "**–•–æ—Å—Ç–∏–Ω–≥:**\n"
                        f"`üî•` –ù–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: **{cpu}%**\n"
                        f"`üìã` –û–ó–£: **{ram} / {total_ram}**\n"
                        f"`üì∂` –ó–∞—Ç—Ä–∏–º–∫–∞: **{round(self.bot.latency * 1000)}ms**\n\n"
                        "**–ë–æ—Ç:** \n"
                        f"`üíø` –í–µ—Ä—Å—ñ—è –±–æ—Ç–∞: **{settings['botVersion']}**\n"
                        f"`üíø` –í–µ—Ä—Å—ñ—è python: `{pyver}`\n"
                        f"`üìö` –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞: **Disnake {disnake.__version__}**\n\n"
                        "**—ñ–Ω—à–µ:** \n"
                        "`üîå` –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: **linux**\n"
                        f"`‚ö°` –ó–∞–ø—É—â–µ–Ω–æ <t:{settings['uptime']}:R>", color=0x2b2d31)
            embed.set_footer(text=f"Tasfers ¬© Copyright 2022  -  {datetime.today().year}  |  –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω—ñ")

        buttons.add_item(disnake.ui.Button(style=disnake.ButtonStyle.link, label="SD.C", url="https://bots.server-discord.com/1006946815050006539"))
        buttons.add_item(disnake.ui.Button(style=disnake.ButtonStyle.link, label="Boticord", url="https://boticord.top/bot/1006946815050006539"))
        buttons.add_item(disnake.ui.Button(style=disnake.ButtonStyle.link, label=website, url="https://lumix.tasfers.com"))
        buttons.add_item(disnake.ui.Button(style=disnake.ButtonStyle.link, label=support, url="https://discord.gg/SpTBwz4xsa"))
        embed.set_thumbnail(url='https://media.discordapp.net/attachments/1025371600922611742/1174431100479750175/imgonline-com-ua-Shape-lg8uJpecCNjzKokp.png?ex=65679132&is=65551c32&hm=8e229723eb6d89e7a3bad679ea29a1f3d49e87ec0c3a602c728e5230959af55a&=&width=422&height=422')
        await inter.edit_original_message(embed=embed, view=buttons)


def setup(bot):
    bot.add_cog(Information(bot))
